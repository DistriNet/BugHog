access_log /logs/nginx-access-poc.log default_format;

location /res/ {
    include /etc/nginx/config/notify_collector.conf;
    error_page 504 @resources;
}

location @resources {
    root /www/data;
}

location ~ index\.(.+)$ {
    root /www/data/pages;
}

location ~ ^/report(/.+)*/?$ {
    proxy_pass http://core:5000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}

location ~ ^/(.+)/(.+)/(.+)/$ {
    root /www/data/pages;
    index index.html index.js;
    # Rewrite URLs conform to experiment file structure
    rewrite ^/(.+)/(.+)/(.+)/$ /$1/$2/$host/$3/ break;
    # Add experiment headers
    access_by_lua_block {
        local cjson = require "cjson"
        local file_path = ngx.var.document_root .. ngx.var.uri .. "headers.json"
        local file = io.open(file_path, "r")

        if file then
            local data = file:read("*a")
            file:close()
            local headers = cjson.decode(data)

            if headers then
                for _, header in ipairs(headers) do
                    if header.key and header.value then
                        ngx.header[header.key] = header.value
                    end
                end
            else
                ngx.log(ngx.ERR, "Error parsing JSON from file: " .. file_path)
            end
        else
            ngx.log(ngx.WARN, "Could not find headers: " .. file_path)
        end
    }
}

location ~ ^/(.+)/(.+)/(.+)$ {
    include /etc/nginx/config/notify_collector.conf;
    error_page 504 @experiment;
}

location @experiment {
    rewrite ^/(.+)$ /$1/;
}

location / {
    proxy_pass http://core:5000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
}
